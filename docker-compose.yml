version: '3.8'

services:
  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '6432:5432'
    env_file:
      - ./env/local.env

  app:
    build: .
    environment:
      TYPEORM_CONNECTION: postgres
      TYPEORM_HOST: db
      TYPEORM_PORT: ${DATABASE_PORT}
      TYPEORM_USERNAME: ${DATABASE_USER}
      TYPEORM_PASSWORD: ${DATABASE_PASSWORD}
      TYPEORM_DATABASE: ${DATABASE_NAME}
      TYPEORM_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET}
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: ${JWT_REFRESH_TOKEN_EXPIRATION_TIME}
    depends_on:
      - db
    ports:
      - '3000:3000'
    command: >
      sh -c "
      chmod +x wait-for-it.sh &&
      ./wait-for-it.sh db:5432 -- npm install &&
      ./wait-for-it.sh db:5432 -- npm run build &&
      ./wait-for-it.sh db:5432 -- npm run typeorm:win &&
      ./wait-for-it.sh db:5432 -- npm run start:dev
      "
    env_file:
      - ./env/local.env

volumes:
  db_data:
